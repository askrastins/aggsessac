[General]
description = "aggsessac.network1"
network = aggsessac.network1
#The seed-set configuration key affects seed selection for RNG
#seed-set = ${runnumber}   # this is the default

num-rngs = 10
warnings = true
sim-time-limit = 30s

#cmdenv-module-messages = true # for normal (non-express) mode only
#cmdenv-event-banners = true   # for normal (non-express) mode only
#tkenv-plugin-path = ../../../etc/plugins
#**.Configurator1.dumpConfig = "netaConfigs_2"

#
# Config specific settings
#

#Number of StandardHost
**.numhosts = 1

#Statistic
**.r1.eth[0].mac.**.vector-recording = false
**.r1.networkLayer.arp.**.vector-recording = false
**.SrcHost.eth[0].mac.**.scalar-recording = false
**.SrcHost.eth[0].queue.pauseQueue.**.scalar-recording = false
**.r1.eth[1].queue.pauseQueue.**.scalar-recording = false
**.SrcHost.eth[0].**.scalar-recording = true
**.host[*].**.encap.**.vector-recording = true 
**.r1.**.vector-recording = true
**.r1.eth[1].queue.**.scalar-recording = true
**.r1.eth[1].queue.**.vector-recording = true
#**.SrcHost.**.channel.utilization.result-recording-modes = vector
#**.SrcHost.**.channel.utilization.vector-recording = true
**.SrcHost.**.channel.throughput.result-recording-modes = default, vector
#**.channel.utilization.result-recording-modes = vector
#**.channel.utilization.vector-recording = true
**.channel.throughput.result-recording-modes = default, vector
#**.channel.busy.result-recording-modes = vector
#**.channel.packets.result-recording-modes = vector
#**.channel.packetsDiscarded.result-recording-modes = vector
#**.channel.packetBytes.result-recording-modes = vector
#**.DestHost.**.scalar-recording = false
#**.DestHost.**.vector-recording = false
#**.SrcHost.**.scalar-recording = false
#**.SrcHost.**.vector-recording = false
#**.switch.**.vector-recording = false
#**.switch.**.scalar-recording = false
#**.r2.**.scalar-recording = true
#**.host[*].**.pauseQueue.**.scalar-recording = false
#**.host[*].udp.**.scalar-recording = false
#**.host[*].**.scalar-recording = true
**.SrcHost.**.vector-recording = true
**.scalar-recording = false
**.vector-recording = false

#specifies whether or not to record event numbers for an output vector. Event numbers are needed by the Sequence Chart Tool.
#**.vector-record-eventnumbers = false 


#Network Configuratr1
**.configurator.networkConfiguratorModule = "Configurator1"

# traffic generator side, add priorities
#**.SrcHost.trafGenType = "IPvXTrafGen" # type is added over network1.ned and it is 'SrcHost: SynGen'.
**.SrcHost.eth[*].egressTCType = "TCsyn" # ðis host ìenerç plûsmas initializâcijas paketes ar iestatîtiem ToS un reqBw laukiem
**.SrcHost.hasStatus = true
**.SrcHost.status.initialStatus = "UP"
**.SrcHost.trafGen.startTime = 5ms
**.SrcHost.trafGen.stopTime = -1s
**.SrcHost.trafGen.sendIntervalFile = "sendInt_logn_6200_dev_0015.csv" #"sendInt_fbm_H07_6000_dev_0049.csv" #"sendInt_fbm_H07_6200_dev_0030.csv"       
#**.SrcHost.trafGen.sendInterval = exponential(5ms) #truncnormal(0ms, 6.4ms)  # #uniform(10ms,20ms)  or  n=1000ms/ 10 (ms) = 100
**.SrcHost.trafGen.packetLength = 26B  #26B is minimal payload 
**.SrcHost.trafGen.protocol = 17 #6-TCP 17-UDP
**.SrcHost.trafGen.destAddresses = "DestHost"


# traffic generator side 
**.host[*].eth[*].ingressTCType = ""
# configuration
**.numUdpApps = 2
**.host[*].udpApp[*].typename = "UDPBasicBurst" # Sends packets to the given IP address(es) in bursts, or acts as a packet sink.
# first app
**.host[*].udpApp[0].localPort = 100
**.host[*].udpApp[0].destPort = 100
**.host[*].udpApp[0].messageLength = 600B #1250B
**.host[*].udpApp[0].sendInterval =  10ms # this is default value, UtilMeter dynamically changes it over simulation period 
**.host[*].udpApp[0].destAddresses = "192.168.2.2" #space-separated list of destination IP addresses, can be empty
**.host[*].udpApp[0].chooseDestAddrMode = "once" # ("once","perBurst","perSend"); when to change the destination address
**.host[0].udpApp[0].burstDuration = 30s 
**.host[0].udpApp[0].sleepDuration = 1s
**.host[*].udpApp[0].startTime =6ms
**.host[*].udpApp[0].stopTime = -1s
**.host[*].udpApp[0].delayLimit = 0s

#acts as a packet sink.
**.DestHost.trafGenType = "IPvXTrafSink"
**.DestHost.trafGen.protocol = 17

#Another host can be defined. at differnet startTime 
**.host[*].udpApp[1].localPort = 101
**.host[*].udpApp[1].destPort = 100
**.host[*].udpApp[1].messageLength = 1250B
**.host[*].udpApp[1].sendInterval =  exponential(5ms)
**.host[*].udpApp[1].destAddresses = "192.168.2.2" #space-separated list of destination IP addresses, can be empty
**.host[*].udpApp[1].chooseDestAddrMode = "perBurst" # ("once","perBurst","perSend"); when to change the destination address
**.host[0].udpApp[1].burstDuration = 2s #ðis host tikai burst taisa lidz ar to dati teik genereti tik ilgi cik norâdit ar burstDuration
**.host[0].udpApp[1].sleepDuration = 1s
**.host[*].udpApp[1].startTime = 1000s  # 1000 lai nesâk sûtît
**.host[*].udpApp[1].stopTime = -1s
**.host[*].udpApp[1].delayLimit = 0s


#Ethernet Interface (EtherMAC_externalQueue_fullduplex)
**.eth[*].macType = "EtherMACFullDuplex"
**.r1.eth[1].queueType = "TC102"
#**.r1.eth[*].queue.dataQueue.utilMeter.upperThrUtil = "5300kbps"
#**.r1.eth[*].queue.dataQueue.utilMeter.lowerThrUtil = "5000kbps"
#**.r1.eth[*].**.maxDelay = 0.12
#**.r1.eth[*].**.maxNumOfPackets = 11
#**.r1.**.wrr.weights = "1 1"

# pcapRecorder settings
#**.numPcapRecorders = 1
#**.SrcHost.pcapRecorder[*].pcapFile = "SrcHost_log.pcap"
#**.DestHost.pcapRecorder[*].pcapFile = "DestHost_log.pcap"
#
